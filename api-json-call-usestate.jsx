import React, { useEffect, useState } from "react";

function App() {
  const [posts, setPosts] = useState([]);

  useEffect(() => {
    //  fetch('https://jsonplaceholder.typicode.com/posts')
    fetch("/advice.json")  // set in public folder
      .then((response) => response.json())
      .then((data) => {
        // console.log("Fetched Posts:", data[0]); // turn off must
        console.log('рж╕ржмржЧрзБрж▓рзЛ ржбрзЗржЯрж╛ :', data); // turn off must
        setPosts(data);
      })
      .catch((error) => console.error("Error fetching data:", error));
  }, []);

  return (
    <div>
      <ul>

       
         {/* рждрзБржорж┐ ржпржжрж┐ рж╕ржмржЧрзБрж▓рзЛ ржбрзЗржЯрж╛ ржжрзЗржЦрж╛рждрзЗ ржЪрж╛ржУ - рждрж╛рж╣рж▓рзЗ ржХрзЗржмрж▓ map ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж▓рзЗржЗ рж╣ржмрзЗред 
         otherwise -   slice(0, 10) ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж▓рзЗржЗ рж╣ржмрзЗ   */}
        

        {posts.map((post) => (
          <li key={post.id}>
            <strong>{post.title}</strong>
            <p>{post.body}</p>
          </li>
        ))}

        {/* slice ржорзВрж▓ржд ржкрзНрж░ржержо рззрзжржЯрж┐ ржЖржЗржЯрзЗржо ржжрзЗржЦрж╛ржирзЛрж░ ржЬржирзНржп ржмрзНржпржмрж╣рзГржд рж╣рзЯ */}
        {/* {posts.slice(0, 10).map((post) => (
          <li key={post.id}>
            <strong>{post.title}</strong>
            <p>{post.body}</p>
          </li>
        ))} */}

      </ul>
    </div>
  );
}

export default App;

// тЬЕ ржмрзНржпрж╛ржЦрзНржпрж╛: setPosts(data);

// ржПржЯрж┐ ржПржХржЯрж┐ React Hook ржлрж╛ржВрж╢ржи (useState ржерзЗржХрзЗ ржкрж╛ржУрзЯрж╛ setPosts)ред
// data ржкрзНржпрж╛рж░рж╛ржорж┐ржЯрж╛рж░ржЯрж┐, ржпрзЗржЯрж╛ ржлрзЗржЪ ржХрж░рж╛ JSON ржбрзЗржЯрж╛, рж╕рзЗржЯрж┐ posts state-ржП рж╕рзЗржЯ ржХрж░рзЗред
// ржЕрж░рзНржерж╛рзО, posts ржПрж░ ржорж╛ржи ржЖржкржбрзЗржЯ рж╣рзЯ ржПржмржВ рж╕рзЗржЗ ржЕржирзБржпрж╛рзЯрзА UI рж░рзЗржирзНржбрж╛рж░ рж╣рзЯред

// ЁЯУМ рж╕ржВржХрзНрж╖рзЗржкрзЗ:
// setPosts(data) тЖТ ржлрзЗржЪ ржХрж░рж╛ ржбрзЗржЯрж╛ тЖТ posts ржирж╛ржоржХ state ржП рж░рж╛ржЦрж╛ рж╣рзЯ тЖТ UI рждрзЗ ржжрзЗржЦрж╛ржирзЛ рж╣рзЯред
